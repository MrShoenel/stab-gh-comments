"use strict";angular.module("btford.markdown",["ngSanitize"]).provider("markdownConverter",function(){var opts={};return{config:function(newOpts){opts=newOpts},$get:function(){return new Showdown.converter(opts)}}}).directive("btfMarkdown",["$sanitize","markdownConverter",function($sanitize,markdownConverter){return{restrict:"AE",link:function(scope,element,attrs){if(attrs.btfMarkdown)scope.$watch(attrs.btfMarkdown,function(newVal){var html=newVal?$sanitize(markdownConverter.makeHtml(newVal)):"";element.html(html)});else{var html=$sanitize(markdownConverter.makeHtml(element.text()));element.html(html)}}}}]),function(window,angular,undefined){function $SanitizeProvider(){this.$get=["$$sanitizeUri",function($$sanitizeUri){return function(html){var buf=[];return htmlParser(html,htmlSanitizeWriter(buf,function(uri,isImage){return!/^unsafe/.test($$sanitizeUri(uri,isImage))})),buf.join("")}}]}function sanitizeText(chars){var buf=[],writer=htmlSanitizeWriter(buf,angular.noop);return writer.chars(chars),buf.join("")}function makeMap(str,lowercaseKeys){var i,obj={},items=str.split(",");for(i=0;i<items.length;i++)obj[lowercaseKeys?angular.lowercase(items[i]):items[i]]=!0;return obj}function htmlParser(html,handler){function parseStartTag(tag,tagName,rest,unary){if(tagName=angular.lowercase(tagName),blockElements[tagName])for(;stack.last()&&inlineElements[stack.last()];)parseEndTag("",stack.last());optionalEndTagElements[tagName]&&stack.last()==tagName&&parseEndTag("",tagName),unary=voidElements[tagName]||!!unary,unary||stack.push(tagName);var attrs={};rest.replace(ATTR_REGEXP,function(match,name,doubleQuotedValue,singleQuotedValue,unquotedValue){var value=doubleQuotedValue||singleQuotedValue||unquotedValue||"";attrs[name]=decodeEntities(value)}),handler.start&&handler.start(tagName,attrs,unary)}function parseEndTag(tag,tagName){var i,pos=0;if(tagName=angular.lowercase(tagName))for(pos=stack.length-1;pos>=0&&stack[pos]!=tagName;pos--);if(pos>=0){for(i=stack.length-1;i>=pos;i--)handler.end&&handler.end(stack[i]);stack.length=pos}}"string"!=typeof html&&(html=null===html||"undefined"==typeof html?"":""+html);var index,chars,match,text,stack=[],last=html;for(stack.last=function(){return stack[stack.length-1]};html;){if(text="",chars=!0,stack.last()&&specialElements[stack.last()]?(html=html.replace(new RegExp("([\\W\\w]*)<\\s*\\/\\s*"+stack.last()+"[^>]*>","i"),function(all,text){return text=text.replace(COMMENT_REGEXP,"$1").replace(CDATA_REGEXP,"$1"),handler.chars&&handler.chars(decodeEntities(text)),""}),parseEndTag("",stack.last())):(0===html.indexOf("<!--")?(index=html.indexOf("--",4),index>=0&&html.lastIndexOf("-->",index)===index&&(handler.comment&&handler.comment(html.substring(4,index)),html=html.substring(index+3),chars=!1)):DOCTYPE_REGEXP.test(html)?(match=html.match(DOCTYPE_REGEXP),match&&(html=html.replace(match[0],""),chars=!1)):BEGING_END_TAGE_REGEXP.test(html)?(match=html.match(END_TAG_REGEXP),match&&(html=html.substring(match[0].length),match[0].replace(END_TAG_REGEXP,parseEndTag),chars=!1)):BEGIN_TAG_REGEXP.test(html)&&(match=html.match(START_TAG_REGEXP),match?(match[4]&&(html=html.substring(match[0].length),match[0].replace(START_TAG_REGEXP,parseStartTag)),chars=!1):(text+="<",html=html.substring(1))),chars&&(index=html.indexOf("<"),text+=0>index?html:html.substring(0,index),html=0>index?"":html.substring(index),handler.chars&&handler.chars(decodeEntities(text)))),html==last)throw $sanitizeMinErr("badparse","The sanitizer was unable to parse the following block of html: {0}",html);last=html}parseEndTag()}function decodeEntities(value){return value?(hiddenPre.innerHTML=value.replace(/</g,"&lt;"),hiddenPre.textContent):""}function encodeEntities(value){return value.replace(/&/g,"&amp;").replace(SURROGATE_PAIR_REGEXP,function(value){var hi=value.charCodeAt(0),low=value.charCodeAt(1);return"&#"+(1024*(hi-55296)+(low-56320)+65536)+";"}).replace(NON_ALPHANUMERIC_REGEXP,function(value){return"&#"+value.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}function htmlSanitizeWriter(buf,uriValidator){var ignore=!1,out=angular.bind(buf,buf.push);return{start:function(tag,attrs,unary){tag=angular.lowercase(tag),!ignore&&specialElements[tag]&&(ignore=tag),ignore||validElements[tag]!==!0||(out("<"),out(tag),angular.forEach(attrs,function(value,key){var lkey=angular.lowercase(key),isImage="img"===tag&&"src"===lkey||"background"===lkey;validAttrs[lkey]!==!0||uriAttrs[lkey]===!0&&!uriValidator(value,isImage)||(out(" "),out(key),out('="'),out(encodeEntities(value)),out('"'))}),out(unary?"/>":">"))},end:function(tag){tag=angular.lowercase(tag),ignore||validElements[tag]!==!0||(out("</"),out(tag),out(">")),tag==ignore&&(ignore=!1)},chars:function(chars){ignore||out(encodeEntities(chars))}}}var $sanitizeMinErr=angular.$$minErr("$sanitize"),START_TAG_REGEXP=/^<((?:[a-zA-Z])[\w:-]*)((?:\s+[\w:-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)\s*(>?)/,END_TAG_REGEXP=/^<\/\s*([\w:-]+)[^>]*>/,ATTR_REGEXP=/([\w:-]+)(?:\s*=\s*(?:(?:"((?:[^"])*)")|(?:'((?:[^'])*)')|([^>\s]+)))?/g,BEGIN_TAG_REGEXP=/^</,BEGING_END_TAGE_REGEXP=/^<\//,COMMENT_REGEXP=/<!--(.*?)-->/g,DOCTYPE_REGEXP=/<!DOCTYPE([^>]*?)>/i,CDATA_REGEXP=/<!\[CDATA\[(.*?)]]>/g,SURROGATE_PAIR_REGEXP=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,NON_ALPHANUMERIC_REGEXP=/([^\#-~| |!])/g,voidElements=makeMap("area,br,col,hr,img,wbr"),optionalEndTagBlockElements=makeMap("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),optionalEndTagInlineElements=makeMap("rp,rt"),optionalEndTagElements=angular.extend({},optionalEndTagInlineElements,optionalEndTagBlockElements),blockElements=angular.extend({},optionalEndTagBlockElements,makeMap("address,article,aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul")),inlineElements=angular.extend({},optionalEndTagInlineElements,makeMap("a,abbr,acronym,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s,samp,small,span,strike,strong,sub,sup,time,tt,u,var")),svgElements=makeMap("circle,defs,desc,ellipse,font-face,font-face-name,font-face-src,g,glyph,hkern,image,linearGradient,line,marker,metadata,missing-glyph,mpath,path,polygon,polyline,radialGradient,rect,stop,svg,switch,text,title,tspan,use"),specialElements=makeMap("script,style"),validElements=angular.extend({},voidElements,blockElements,inlineElements,optionalEndTagElements,svgElements),uriAttrs=makeMap("background,cite,href,longdesc,src,usemap,xlink:href"),htmlAttrs=makeMap("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace,ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules,scope,scrolling,shape,size,span,start,summary,tabindex,target,title,type,valign,value,vspace,width"),svgAttrs=makeMap("accent-height,accumulate,additive,alphabetic,arabic-form,ascent,baseProfile,bbox,begin,by,calcMode,cap-height,class,color,color-rendering,content,cx,cy,d,dx,dy,descent,display,dur,end,fill,fill-rule,font-family,font-size,font-stretch,font-style,font-variant,font-weight,from,fx,fy,g1,g2,glyph-name,gradientUnits,hanging,height,horiz-adv-x,horiz-origin-x,ideographic,k,keyPoints,keySplines,keyTimes,lang,marker-end,marker-mid,marker-start,markerHeight,markerUnits,markerWidth,mathematical,max,min,offset,opacity,orient,origin,overline-position,overline-thickness,panose-1,path,pathLength,points,preserveAspectRatio,r,refX,refY,repeatCount,repeatDur,requiredExtensions,requiredFeatures,restart,rotate,rx,ry,slope,stemh,stemv,stop-color,stop-opacity,strikethrough-position,strikethrough-thickness,stroke,stroke-dasharray,stroke-dashoffset,stroke-linecap,stroke-linejoin,stroke-miterlimit,stroke-opacity,stroke-width,systemLanguage,target,text-anchor,to,transform,type,u1,u2,underline-position,underline-thickness,unicode,unicode-range,units-per-em,values,version,viewBox,visibility,width,widths,x,x-height,x1,x2,xlink:actuate,xlink:arcrole,xlink:role,xlink:show,xlink:title,xlink:type,xml:base,xml:lang,xml:space,xmlns,xmlns:xlink,y,y1,y2,zoomAndPan",!0),validAttrs=angular.extend({},uriAttrs,svgAttrs,htmlAttrs),hiddenPre=document.createElement("pre");angular.module("ngSanitize",[]).provider("$sanitize",$SanitizeProvider),angular.module("ngSanitize").filter("linky",["$sanitize",function($sanitize){var LINKY_URL_REGEXP=/((ftp|https?):\/\/|(www\.)|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>"\u201d\u2019]/i,MAILTO_REGEXP=/^mailto:/i;return function(text,target){function addText(text){text&&html.push(sanitizeText(text))}function addLink(url,text){html.push("<a "),angular.isDefined(target)&&html.push('target="',target,'" '),html.push('href="',url.replace(/"/g,"&quot;"),'">'),addText(text),html.push("</a>")}if(!text)return text;for(var match,url,i,raw=text,html=[];match=raw.match(LINKY_URL_REGEXP);)url=match[0],match[2]||match[4]||(url=(match[3]?"http://":"mailto:")+url),i=match.index,addText(raw.substr(0,i)),addLink(url,match[0].replace(MAILTO_REGEXP,"")),raw=raw.substring(i+match[0].length);return addText(raw),$sanitize(html.join(""))}}])}(window,window.angular);var Showdown={extensions:{}},forEach=Showdown.forEach=function(obj,callback){if("function"==typeof obj.forEach)obj.forEach(callback);else{var i,len=obj.length;for(i=0;len>i;i++)callback(obj[i],i,obj)}},stdExtName=function(s){return s.replace(/[_-]||\s/g,"").toLowerCase()};Showdown.converter=function(converter_options){var g_urls,g_titles,g_html_blocks,g_list_level=0,g_lang_extensions=[],g_output_modifiers=[];if("undefined"!=typeof module&&"undefined"!=typeof exports&&"undefined"!=typeof require){var fs=require("fs");if(fs){var extensions=fs.readdirSync((__dirname||".")+"/extensions").filter(function(file){return~file.indexOf(".js")}).map(function(file){return file.replace(/\.js$/,"")});Showdown.forEach(extensions,function(ext){var name=stdExtName(ext);Showdown.extensions[name]=require("./extensions/"+ext)})}}if(this.makeHtml=function(text){return g_urls={},g_titles={},g_html_blocks=[],text=text.replace(/~/g,"~T"),text=text.replace(/\$/g,"~D"),text=text.replace(/\r\n/g,"\n"),text=text.replace(/\r/g,"\n"),text="\n\n"+text+"\n\n",text=_Detab(text),text=text.replace(/^[ \t]+$/gm,""),Showdown.forEach(g_lang_extensions,function(x){text=_ExecuteExtension(x,text)}),text=_DoGithubCodeBlocks(text),text=_HashHTMLBlocks(text),text=_StripLinkDefinitions(text),text=_RunBlockGamut(text),text=_UnescapeSpecialChars(text),text=text.replace(/~D/g,"$$"),text=text.replace(/~T/g,"~"),Showdown.forEach(g_output_modifiers,function(x){text=_ExecuteExtension(x,text)}),text},converter_options&&converter_options.extensions){var self=this;Showdown.forEach(converter_options.extensions,function(plugin){if("string"==typeof plugin&&(plugin=Showdown.extensions[stdExtName(plugin)]),"function"!=typeof plugin)throw"Extension '"+plugin+"' could not be loaded.  It was either not found or is not a valid extension.";Showdown.forEach(plugin(self),function(ext){ext.type?"language"===ext.type||"lang"===ext.type?g_lang_extensions.push(ext):("output"===ext.type||"html"===ext.type)&&g_output_modifiers.push(ext):g_output_modifiers.push(ext)})})}var _ProcessListItems,_ExecuteExtension=function(ext,text){if(ext.regex){var re=new RegExp(ext.regex,"g");return text.replace(re,ext.replace)}return ext.filter?ext.filter(text):void 0},_StripLinkDefinitions=function(text){return text+="~0",text=text.replace(/^[ ]{0,3}\[(.+)\]:[ \t]*\n?[ \t]*<?(\S+?)>?[ \t]*\n?[ \t]*(?:(\n*)["(](.+?)[")][ \t]*)?(?:\n+|(?=~0))/gm,function(wholeMatch,m1,m2,m3,m4){return m1=m1.toLowerCase(),g_urls[m1]=_EncodeAmpsAndAngles(m2),m3?m3+m4:(m4&&(g_titles[m1]=m4.replace(/"/g,"&quot;")),"")}),text=text.replace(/~0/,"")},_HashHTMLBlocks=function(text){text=text.replace(/\n/g,"\n\n");return text=text.replace(/^(<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|ins|del)\b[^\r]*?\n<\/\2>[ \t]*(?=\n+))/gm,hashElement),text=text.replace(/^(<(p|div|h[1-6]|blockquote|pre|table|dl|ol|ul|script|noscript|form|fieldset|iframe|math|style|section|header|footer|nav|article|aside)\b[^\r]*?<\/\2>[ \t]*(?=\n+)\n)/gm,hashElement),text=text.replace(/(\n[ ]{0,3}(<(hr)\b([^<>])*?\/?>)[ \t]*(?=\n{2,}))/g,hashElement),text=text.replace(/(\n\n[ ]{0,3}<!(--[^\r]*?--\s*)+>[ \t]*(?=\n{2,}))/g,hashElement),text=text.replace(/(?:\n\n)([ ]{0,3}(?:<([?%])[^\r]*?\2>)[ \t]*(?=\n{2,}))/g,hashElement),text=text.replace(/\n\n/g,"\n")},hashElement=function(wholeMatch,m1){var blockText=m1;return blockText=blockText.replace(/\n\n/g,"\n"),blockText=blockText.replace(/^\n/,""),blockText=blockText.replace(/\n+$/g,""),blockText="\n\n~K"+(g_html_blocks.push(blockText)-1)+"K\n\n"},_RunBlockGamut=function(text){text=_DoHeaders(text);var key=hashBlock("<hr />");return text=text.replace(/^[ ]{0,2}([ ]?\*[ ]?){3,}[ \t]*$/gm,key),text=text.replace(/^[ ]{0,2}([ ]?\-[ ]?){3,}[ \t]*$/gm,key),text=text.replace(/^[ ]{0,2}([ ]?\_[ ]?){3,}[ \t]*$/gm,key),text=_DoLists(text),text=_DoCodeBlocks(text),text=_DoBlockQuotes(text),text=_HashHTMLBlocks(text),text=_FormParagraphs(text)},_RunSpanGamut=function(text){return text=_DoCodeSpans(text),text=_EscapeSpecialCharsWithinTagAttributes(text),text=_EncodeBackslashEscapes(text),text=_DoImages(text),text=_DoAnchors(text),text=_DoAutoLinks(text),text=_EncodeAmpsAndAngles(text),text=_DoItalicsAndBold(text),text=text.replace(/  +\n/g," <br />\n")},_EscapeSpecialCharsWithinTagAttributes=function(text){var regex=/(<[a-z\/!$]("[^"]*"|'[^']*'|[^'">])*>|<!(--.*?--\s*)+>)/gi;return text=text.replace(regex,function(wholeMatch){var tag=wholeMatch.replace(/(.)<\/?code>(?=.)/g,"$1`");return tag=escapeCharacters(tag,"\\`*_")})},_DoAnchors=function(text){return text=text.replace(/(\[((?:\[[^\]]*\]|[^\[\]])*)\][ ]?(?:\n[ ]*)?\[(.*?)\])()()()()/g,writeAnchorTag),text=text.replace(/(\[((?:\[[^\]]*\]|[^\[\]])*)\]\([ \t]*()<?(.*?(?:\(.*?\).*?)?)>?[ \t]*((['"])(.*?)\6[ \t]*)?\))/g,writeAnchorTag),text=text.replace(/(\[([^\[\]]+)\])()()()()()/g,writeAnchorTag)},writeAnchorTag=function(wholeMatch,m1,m2,m3,m4,m5,m6,m7){void 0==m7&&(m7="");var whole_match=m1,link_text=m2,link_id=m3.toLowerCase(),url=m4,title=m7;if(""==url)if(""==link_id&&(link_id=link_text.toLowerCase().replace(/ ?\n/g," ")),url="#"+link_id,void 0!=g_urls[link_id])url=g_urls[link_id],void 0!=g_titles[link_id]&&(title=g_titles[link_id]);else{if(!(whole_match.search(/\(\s*\)$/m)>-1))return whole_match;url=""}url=escapeCharacters(url,"*_");var result='<a href="'+url+'"';return""!=title&&(title=title.replace(/"/g,"&quot;"),title=escapeCharacters(title,"*_"),result+=' title="'+title+'"'),result+=">"+link_text+"</a>"},_DoImages=function(text){return text=text.replace(/(!\[(.*?)\][ ]?(?:\n[ ]*)?\[(.*?)\])()()()()/g,writeImageTag),text=text.replace(/(!\[(.*?)\]\s?\([ \t]*()<?(\S+?)>?[ \t]*((['"])(.*?)\6[ \t]*)?\))/g,writeImageTag)},writeImageTag=function(wholeMatch,m1,m2,m3,m4,m5,m6,m7){var whole_match=m1,alt_text=m2,link_id=m3.toLowerCase(),url=m4,title=m7;if(title||(title=""),""==url){if(""==link_id&&(link_id=alt_text.toLowerCase().replace(/ ?\n/g," ")),url="#"+link_id,void 0==g_urls[link_id])return whole_match;url=g_urls[link_id],void 0!=g_titles[link_id]&&(title=g_titles[link_id])}alt_text=alt_text.replace(/"/g,"&quot;"),url=escapeCharacters(url,"*_");var result='<img src="'+url+'" alt="'+alt_text+'"';return title=title.replace(/"/g,"&quot;"),title=escapeCharacters(title,"*_"),result+=' title="'+title+'"',result+=" />"},_DoHeaders=function(text){function headerId(m){return m.replace(/[^\w]/g,"").toLowerCase()}return text=text.replace(/^(.+)[ \t]*\n=+[ \t]*\n+/gm,function(wholeMatch,m1){return hashBlock('<h1 id="'+headerId(m1)+'">'+_RunSpanGamut(m1)+"</h1>")}),text=text.replace(/^(.+)[ \t]*\n-+[ \t]*\n+/gm,function(matchFound,m1){return hashBlock('<h2 id="'+headerId(m1)+'">'+_RunSpanGamut(m1)+"</h2>")}),text=text.replace(/^(\#{1,6})[ \t]*(.+?)[ \t]*\#*\n+/gm,function(wholeMatch,m1,m2){var h_level=m1.length;return hashBlock("<h"+h_level+' id="'+headerId(m2)+'">'+_RunSpanGamut(m2)+"</h"+h_level+">")})},_DoLists=function(text){text+="~0";var whole_list=/^(([ ]{0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(~0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/gm;return g_list_level?text=text.replace(whole_list,function(wholeMatch,m1,m2){var list=m1,list_type=m2.search(/[*+-]/g)>-1?"ul":"ol";list=list.replace(/\n{2,}/g,"\n\n\n");var result=_ProcessListItems(list);return result=result.replace(/\s+$/,""),result="<"+list_type+">"+result+"</"+list_type+">\n"}):(whole_list=/(\n\n|^\n?)(([ ]{0,3}([*+-]|\d+[.])[ \t]+)[^\r]+?(~0|\n{2,}(?=\S)(?![ \t]*(?:[*+-]|\d+[.])[ \t]+)))/g,text=text.replace(whole_list,function(wholeMatch,m1,m2,m3){var runup=m1,list=m2,list_type=m3.search(/[*+-]/g)>-1?"ul":"ol",list=list.replace(/\n{2,}/g,"\n\n\n"),result=_ProcessListItems(list);return result=runup+"<"+list_type+">\n"+result+"</"+list_type+">\n"})),text=text.replace(/~0/,"")};_ProcessListItems=function(list_str){return g_list_level++,list_str=list_str.replace(/\n{2,}$/,"\n"),list_str+="~0",list_str=list_str.replace(/(\n)?(^[ \t]*)([*+-]|\d+[.])[ \t]+([^\r]+?(\n{1,2}))(?=\n*(~0|\2([*+-]|\d+[.])[ \t]+))/gm,function(wholeMatch,m1,m2,m3,m4){var item=m4,leading_line=m1;return leading_line||item.search(/\n{2,}/)>-1?item=_RunBlockGamut(_Outdent(item)):(item=_DoLists(_Outdent(item)),item=item.replace(/\n$/,""),item=_RunSpanGamut(item)),"<li>"+item+"</li>\n"}),list_str=list_str.replace(/~0/g,""),g_list_level--,list_str};var _DoCodeBlocks=function(text){return text+="~0",text=text.replace(/(?:\n\n|^)((?:(?:[ ]{4}|\t).*\n+)+)(\n*[ ]{0,3}[^ \t\n]|(?=~0))/g,function(wholeMatch,m1,m2){var codeblock=m1,nextChar=m2;return codeblock=_EncodeCode(_Outdent(codeblock)),codeblock=_Detab(codeblock),codeblock=codeblock.replace(/^\n+/g,""),codeblock=codeblock.replace(/\n+$/g,""),codeblock="<pre><code>"+codeblock+"\n</code></pre>",hashBlock(codeblock)+nextChar}),text=text.replace(/~0/,"")},_DoGithubCodeBlocks=function(text){return text+="~0",text=text.replace(/(?:^|\n)```(.*)\n([\s\S]*?)\n```/g,function(wholeMatch,m1,m2){var language=m1,codeblock=m2;return codeblock=_EncodeCode(codeblock),codeblock=_Detab(codeblock),codeblock=codeblock.replace(/^\n+/g,""),codeblock=codeblock.replace(/\n+$/g,""),codeblock="<pre><code"+(language?' class="'+language+'"':"")+">"+codeblock+"\n</code></pre>",hashBlock(codeblock)}),text=text.replace(/~0/,"")},hashBlock=function(text){return text=text.replace(/(^\n+|\n+$)/g,""),"\n\n~K"+(g_html_blocks.push(text)-1)+"K\n\n"},_DoCodeSpans=function(text){return text=text.replace(/(^|[^\\])(`+)([^\r]*?[^`])\2(?!`)/gm,function(wholeMatch,m1,m2,m3,m4){var c=m3;return c=c.replace(/^([ \t]*)/g,""),c=c.replace(/[ \t]*$/g,""),c=_EncodeCode(c),m1+"<code>"+c+"</code>"})},_EncodeCode=function(text){return text=text.replace(/&/g,"&amp;"),text=text.replace(/</g,"&lt;"),text=text.replace(/>/g,"&gt;"),text=escapeCharacters(text,"*_{}[]\\",!1)},_DoItalicsAndBold=function(text){return text=text.replace(/(\*\*|__)(?=\S)([^\r]*?\S[*_]*)\1/g,"<strong>$2</strong>"),text=text.replace(/(\*|_)(?=\S)([^\r]*?\S)\1/g,"<em>$2</em>")},_DoBlockQuotes=function(text){return text=text.replace(/((^[ \t]*>[ \t]?.+\n(.+\n)*\n*)+)/gm,function(wholeMatch,m1){var bq=m1;return bq=bq.replace(/^[ \t]*>[ \t]?/gm,"~0"),bq=bq.replace(/~0/g,""),bq=bq.replace(/^[ \t]+$/gm,""),bq=_RunBlockGamut(bq),bq=bq.replace(/(^|\n)/g,"$1  "),bq=bq.replace(/(\s*<pre>[^\r]+?<\/pre>)/gm,function(wholeMatch,m1){var pre=m1;return pre=pre.replace(/^  /gm,"~0"),pre=pre.replace(/~0/g,"")}),hashBlock("<blockquote>\n"+bq+"\n</blockquote>")})},_FormParagraphs=function(text){text=text.replace(/^\n+/g,""),text=text.replace(/\n+$/g,"");for(var grafs=text.split(/\n{2,}/g),grafsOut=[],end=grafs.length,i=0;end>i;i++){var str=grafs[i];str.search(/~K(\d+)K/g)>=0?grafsOut.push(str):str.search(/\S/)>=0&&(str=_RunSpanGamut(str),str=str.replace(/^([ \t]*)/g,"<p>"),str+="</p>",grafsOut.push(str))}end=grafsOut.length;for(var i=0;end>i;i++)for(;grafsOut[i].search(/~K(\d+)K/)>=0;){var blockText=g_html_blocks[RegExp.$1];blockText=blockText.replace(/\$/g,"$$$$"),grafsOut[i]=grafsOut[i].replace(/~K\d+K/,blockText)}return grafsOut.join("\n\n")},_EncodeAmpsAndAngles=function(text){return text=text.replace(/&(?!#?[xX]?(?:[0-9a-fA-F]+|\w+);)/g,"&amp;"),text=text.replace(/<(?![a-z\/?\$!])/gi,"&lt;")},_EncodeBackslashEscapes=function(text){return text=text.replace(/\\(\\)/g,escapeCharacters_callback),text=text.replace(/\\([`*_{}\[\]()>#+-.!])/g,escapeCharacters_callback)},_DoAutoLinks=function(text){return text=text.replace(/<((https?|ftp|dict):[^'">\s]+)>/gi,'<a href="$1">$1</a>'),text=text.replace(/<(?:mailto:)?([-.\w]+\@[-a-z0-9]+(\.[-a-z0-9]+)*\.[a-z]+)>/gi,function(wholeMatch,m1){return _EncodeEmailAddress(_UnescapeSpecialChars(m1))})},_EncodeEmailAddress=function(addr){var encode=[function(ch){return"&#"+ch.charCodeAt(0)+";"},function(ch){return"&#x"+ch.charCodeAt(0).toString(16)+";"},function(ch){return ch}];return addr="mailto:"+addr,addr=addr.replace(/./g,function(ch){if("@"==ch)ch=encode[Math.floor(2*Math.random())](ch);else if(":"!=ch){var r=Math.random();ch=r>.9?encode[2](ch):r>.45?encode[1](ch):encode[0](ch)}return ch}),addr='<a href="'+addr+'">'+addr+"</a>",addr=addr.replace(/">.+:/g,'">')},_UnescapeSpecialChars=function(text){return text=text.replace(/~E(\d+)E/g,function(wholeMatch,m1){var charCodeToReplace=parseInt(m1);return String.fromCharCode(charCodeToReplace)})},_Outdent=function(text){return text=text.replace(/^(\t|[ ]{1,4})/gm,"~0"),text=text.replace(/~0/g,"")},_Detab=function(text){return text=text.replace(/\t(?=\t)/g,"    "),text=text.replace(/\t/g,"~A~B"),text=text.replace(/~B(.+?)~A/g,function(wholeMatch,m1,m2){for(var leadingText=m1,numSpaces=4-leadingText.length%4,i=0;numSpaces>i;i++)leadingText+=" ";return leadingText}),text=text.replace(/~A/g,"    "),text=text.replace(/~B/g,"")},escapeCharacters=function(text,charsToEscape,afterBackslash){var regexString="(["+charsToEscape.replace(/([\[\]\\])/g,"\\$1")+"])";afterBackslash&&(regexString="\\\\"+regexString);var regex=new RegExp(regexString,"g");return text=text.replace(regex,escapeCharacters_callback)},escapeCharacters_callback=function(wholeMatch,m1){var charCodeToEscape=m1.charCodeAt(0);return"~E"+charCodeToEscape+"E"}},"undefined"!=typeof module&&(module.exports=Showdown),"function"==typeof define&&define.amd&&define("showdown",function(){return Showdown});var Common;!function(Common){var Optional=function(){function Optional(value){this.value=value,this.value=value||null}return Object.defineProperty(Optional.prototype,"isEmpty",{get:function(){return null===this.value},enumerable:!0,configurable:!0}),Object.defineProperty(Optional.prototype,"isPresent",{get:function(){return!this.isEmpty},enumerable:!0,configurable:!0}),Object.defineProperty(Optional.prototype,"get",{get:function(){if(this.isEmpty)throw new Error("The Optional<T> does not contain any value.");return this.value},enumerable:!0,configurable:!0}),Optional}();Common.Optional=Optional,function(SortOrder){SortOrder[SortOrder.ASC=0]="ASC",SortOrder[SortOrder.DESC=1]="DESC",SortOrder[SortOrder.RANDOM=2]="RANDOM"}(Common.SortOrder||(Common.SortOrder={}));Common.SortOrder}(Common||(Common={}));var Blog;!function(Blog){var Article;!function(Article){var StabGithubCommentsArticleTransformer=function(){function StabGithubCommentsArticleTransformer(){}return StabGithubCommentsArticleTransformer.prototype.transform=function(original){var exec=StabGithubCommentsArticleTransformer.matchMeta.exec(original);return null===exec?original:original.replace("</article>",'<stab-github-comments-container issue-url="'+exec[1]+'"></stab-github-comments-container></article>')},StabGithubCommentsArticleTransformer.matchMeta=/<meta\s+?name="stab-github-comments-issue-url"\s+?content="([^"]+)"\s*?\/?>/i,StabGithubCommentsArticleTransformer}();Article.StabGithubCommentsArticleTransformer=StabGithubCommentsArticleTransformer}(Article=Blog.Article||(Blog.Article={}))}(Blog||(Blog={}));var Blog;!function(Blog){var Article;!function(Article){var Comments;!function(Comments){function addStylesToHead(){var style=document.createElement("style");style.setAttribute("type","text/css"),style.setAttribute("id","stab-comments-github-styles"),style.innerHTML=includedCss,document.querySelector("head").appendChild(style)}var includedCss="div#stab-github-comments-container div.jumbotron{margin-top:2em}div#stab-github-comments-container>hr:first-child+h3{margin:1.5em 0}div#stab-github-comments-container hr#poster-and-comments-separator{margin:1.5em 0}div#stab-github-comments-container>div>div.comment.media{margin-top:2.5em;border-radius:4px}div#stab-github-comments-container>div>div.comment.media:first-of-type{margin-top:0}div#stab-github-comments-container>div>div.comment.media:last-of-type{margin-bottom:2.5em}div#stab-github-comments-container>div>div.comment div.media-left{background-color:#f8f8f8;padding:.5ex .5ex 0}div#stab-github-comments-container>div>div.comment div.media-left img{max-width:50px;max-height:50px}div#stab-github-comments-container>div>div.comment div.media-body{padding:0 1ex 1ex;background-color:#f2f2f2}div#stab-github-comments-container>div>div.comment div.media-body h4{display:inline-block;margin:.5ex auto 0}div#stab-github-comments-container>div>div.comment div.media-body h4>small{font-size:75%;font-style:italic;display:block;margin-top:1ex}div#stab-github-comments-container>div>div.comment div.media-body span.label{display:inline-block;vertical-align:top;margin-right:.5ex}div#stab-github-comments-container>div>div.comment div.media-body span.label span.glyphicon{font-size:90%}div#stab-github-comments-container>div>div.comment div.media-body span.label[ng-click]{cursor:pointer}div#stab-github-comments-container>div>div.comment div.media-body span.label[disabled],div#stab-github-comments-container>div>div.comment div.media-body span.label.disabled{opacity:.5;cursor:not-allowed}div#stab-github-comments-container>div>div.comment div.media-body hr{border-top-color:#fff;margin:.5em 0 .5em}div#stab-github-comments-container>div>div.comment div.media-body p{margin:0}div#stab-github-comments-container>div>div.comment div.edit-comment-inplace textarea{display:block;width:100%;height:8em;font-size:75%;margin:0;padding:.5ex}div#create-post hr{border-top-color:#fff;margin:.5em 0 .5em}div#create-post>div:first-child{padding:1ex;background-color:#f4f4f4;border-radius:4px}div#create-post>div:first-child>div:first-child{background-color:#eee}div#create-post>div:first-child>div:first-child>h4{background-size:contain;height:60px;padding-left:65px;line-height:60px;background-repeat:no-repeat;display:inline-block;margin:0}div#create-post>div:first-child>div:first-child+div{padding:1ex 0}div#create-post>div:first-child>div:first-child+div>textarea{display:block;width:100%;height:8em;font-size:75%;margin:0;padding:.5ex}div.btn-group button.btn:disabled{cursor:not-allowed;color:#333}",StabGithubComments=function(){function StabGithubComments(){}return StabGithubComments.prototype.createModule=function(){return""!==includedCss&&addStylesToHead(),angular.module("blogapp.article.stab-gh-comments",["ngSanitize","btford.markdown"]).constant("CONFIG_COMMENTS",(new Common.Constants).add("OAUTH_CLIENT_ID","ddd88d5a03c3e91978f3").add("OAUTH_SCOPES",["user","public_repo"]).add("OAUTH_HTML_CALLBACK_FILE","auth.callback.html").add("OAUTH_AUTHORIZATION_APP_URL","https://stab-gh-comments-authorizer.herokuapp.com/").add("OAUTH_LOCAL_STORAGE_TOKEN_KEY","STAB_GITHUB_COMMENTS_OAUTH_ACCESS_TOKEN")).config(["$anchorScrollProvider",function($anchorScrollProvider){$anchorScrollProvider.disableAutoScrolling()}])},StabGithubComments}();Comments.stabGithubComments=(new StabGithubComments).createModule()}(Comments=Article.Comments||(Article.Comments={}))}(Article=Blog.Article||(Blog.Article={}))}(Blog||(Blog={}));var Blog;!function(Blog){var Article;!function(Article){var Comments;!function(Comments){var StabGithubCommentsAuthorizationService=function(){function StabGithubCommentsAuthorizationService($http,$q,CONFIG){this.$http=$http,this.$q=$q,this.CONFIG=CONFIG,this.localStorageInterval=null,this.userAuthorizedDeferred=$q.defer()}return Object.defineProperty(StabGithubCommentsAuthorizationService.prototype,"userAuthorizedPromise",{get:function(){return this.userAuthorizedDeferred.promise},enumerable:!0,configurable:!0}),Object.defineProperty(StabGithubCommentsAuthorizationService,"isLocalStorageAvailable",{get:function(){var test="test";try{return localStorage.setItem(test,test),localStorage.removeItem(test),!0}catch(e){}return!1},enumerable:!0,configurable:!0}),Object.defineProperty(StabGithubCommentsAuthorizationService.prototype,"accessToken",{get:function(){return new Common.Optional(localStorage.getItem(this.CONFIG.get("OAUTH_LOCAL_STORAGE_TOKEN_KEY")))},enumerable:!0,configurable:!0}),StabGithubCommentsAuthorizationService.prototype.resetAccessToken=function(){localStorage.removeItem(this.CONFIG.get("OAUTH_LOCAL_STORAGE_TOKEN_KEY"))},Object.defineProperty(StabGithubCommentsAuthorizationService.prototype,"isUserAuthorized",{get:function(){var _this=this,token=this.accessToken;if(!StabGithubCommentsAuthorizationService.isLocalStorageAvailable||token.isEmpty)return this.$q.when(!1);var scopes=this.CONFIG.get("OAUTH_SCOPES").join(",");return this.$http.get(this.CONFIG.get("OAUTH_AUTHORIZATION_APP_URL")+"check/"+token.get+"/"+scopes).then(function(foo){return _this.userAuthorizedDeferred.resolve(),!0})["catch"](function(_404){return _this.resetAccessToken(),!1})},enumerable:!0,configurable:!0}),Object.defineProperty(StabGithubCommentsAuthorizationService.prototype,"accessTokenUsingExistingAuthorizationOrAuthorize",{get:function(){var _this=this;return this.isUserAuthorized.then(function(isAuthorizedOrNot){return isAuthorizedOrNot?_this.accessToken:_this.authorize().then(function(isAuthorized){return isAuthorized?(_this.userAuthorizedDeferred.resolve(),_this.accessToken):new Common.Optional})})},enumerable:!0,configurable:!0}),Object.defineProperty(StabGithubCommentsAuthorizationService.prototype,"state",{get:function(){var appUrl=this.CONFIG.get("OAUTH_AUTHORIZATION_APP_URL");return this.$http.get(appUrl+"state").then(function(promiseCallbackArg){return promiseCallbackArg.data})},enumerable:!0,configurable:!0}),StabGithubCommentsAuthorizationService.prototype.authorize=function(){var _this=this;return StabGithubCommentsAuthorizationService.isLocalStorageAvailable?this.state.then(function(state){var clientId=_this.CONFIG.get("OAUTH_CLIENT_ID"),scopes=_this.CONFIG.get("OAUTH_SCOPES").join(","),blogUrl=_this.authCallbackAbsolutePath,redirectUri=encodeURIComponent(_this.CONFIG.get("OAUTH_AUTHORIZATION_APP_URL")+"authorize/?blog_url="+blogUrl),wnd=window.open("https://github.com/login/oauth/authorize?client_id="+clientId+"&state="+state+"&scope="+scopes+"&redirect_uri="+redirectUri,"_blank");return _this.pollLocalStorage().then(function(token){return _this.isUserAuthorized})["finally"](function(){wnd.close()})})["catch"](function(){return!1}):this.$q.when(!1)},StabGithubCommentsAuthorizationService.prototype.pollLocalStorage=function(mSecs){var _this=this;if(void 0===mSecs&&(mSecs=50),!StabGithubCommentsAuthorizationService.isLocalStorageAvailable)return this.$q.when(null);if(null!==this.localStorageInterval)throw new Error("You may only call this function once.");var defer=this.$q.defer();return this.localStorageInterval=setInterval(function(){var token=_this.accessToken;token.isPresent&&(clearInterval(_this.localStorageInterval),_this.localStorageInterval=null,defer.resolve(token.get))},mSecs),defer.promise},Object.defineProperty(StabGithubCommentsAuthorizationService.prototype,"authCallbackAbsolutePath",{get:function(){var fileName=this.CONFIG.get("OAUTH_HTML_CALLBACK_FILE"),pathHere=Array.prototype.slice.call(document.querySelectorAll("script"),0).filter(function(elem){return elem.getAttribute("src").indexOf("stab.comments.github")>=0})[0].getAttribute("src");return pathHere=pathHere.substring(0,pathHere.lastIndexOf("/"))+"/",
location.protocol+"//"+location.host+(0===pathHere.indexOf("/")?pathHere:location.pathname+pathHere)+fileName},enumerable:!0,configurable:!0}),StabGithubCommentsAuthorizationService.inlineAnnotatedConstructor=["$http","$q","CONFIG_COMMENTS",StabGithubCommentsAuthorizationService],StabGithubCommentsAuthorizationService}();Comments.StabGithubCommentsAuthorizationService=StabGithubCommentsAuthorizationService,angular.module("blogapp.article.stab-gh-comments").service("StabGithubCommentsAuthorizationService",StabGithubCommentsAuthorizationService.inlineAnnotatedConstructor)}(Comments=Article.Comments||(Article.Comments={}))}(Article=Blog.Article||(Blog.Article={}))}(Blog||(Blog={}));var Blog;!function(Blog){var Article;!function(Article){var Comments;!function(Comments){var StabGithubCommentsUserService=function(){function StabGithubCommentsUserService($http,$q,$cacheFactoryService,authService){this.$http=$http,this.$q=$q,this.$cacheFactoryService=$cacheFactoryService,this.authService=authService,this.userCache=$cacheFactoryService("users")}return Object.defineProperty(StabGithubCommentsUserService.prototype,"authenticatedUser",{get:function(){var _this=this;return this.authService.userAuthorizedPromise.then(function(){return _this.authService.accessTokenUsingExistingAuthorizationOrAuthorize.then(function(optToken){if(!optToken.isPresent)return new Common.Optional;var user=_this.userCache.get("__authenticated_user__");return void 0===user?_this.$http.get("https://api.github.com/user",{headers:{Authorization:"token "+optToken.get}}).then(function(promiseCallbackArg){var user=promiseCallbackArg.data;return _this.userCache.put(user.id.toString(),user),_this.userCache.put("__authenticated_user__",user),new Common.Optional(user)})["catch"](function(){return new Common.Optional}):_this.$q.when(new Common.Optional(user))})})},enumerable:!0,configurable:!0}),StabGithubCommentsUserService.inlineAnnotatedConstructor=["$http","$q","$cacheFactory","StabGithubCommentsAuthorizationService",StabGithubCommentsUserService],StabGithubCommentsUserService}();Comments.StabGithubCommentsUserService=StabGithubCommentsUserService,angular.module("blogapp.article.stab-gh-comments").service("StabGithubCommentsUserService",StabGithubCommentsUserService.inlineAnnotatedConstructor)}(Comments=Article.Comments||(Article.Comments={}))}(Article=Blog.Article||(Blog.Article={}))}(Blog||(Blog={}));var Blog;!function(Blog){var Article;!function(Article){var Comments;!function(Comments){var StabGithubCommentsService=function(){function StabGithubCommentsService($http,$q,$cacheFactoryService,authService,userService){this.$http=$http,this.$q=$q,this.$cacheFactoryService=$cacheFactoryService,this.authService=authService,this.userService=userService,this.issueComments_sortBy="created",this.issueCache=$cacheFactoryService("issues")}return StabGithubCommentsService.prototype.issueByUrl=function(issueUrl){var _this=this;issueUrl=StabGithubCommentsService.normalizeIssueUrl(issueUrl);var issueApiUrl=StabGithubCommentsService.toApiIssueUrl(issueUrl),issue=this.issueCache.get(issueUrl);return issue?this.$q.when(new Common.Optional(issue)):this.$http.get(issueApiUrl).then(function(promiseCallbackArg){var issue=promiseCallbackArg.data;return issue.isOpen="open"===issue.state,issue.comments=[],_this.issueCache.put(issueUrl,issue),new Common.Optional(issue)})["catch"](function(){return new Common.Optional})},StabGithubCommentsService.prototype.commentsForIssueByUrl=function(issueUrl,sortBy,order,since){var _this=this;void 0===sortBy&&(sortBy="created"),void 0===order&&(order=Common.SortOrder.DESC),void 0===since&&(since=new Date(0)),this.issueComments_sortBy="created"===sortBy?sortBy:"updated",issueUrl=StabGithubCommentsService.normalizeIssueUrl(issueUrl);var issueApiUrl=StabGithubCommentsService.toApiIssueUrl(issueUrl),promiseIssue=this.issueByUrl(issueUrl),promiseComments=this.$http.get(issueApiUrl+"/comments",{params:{sort:"created"===sortBy?sortBy:"updated",direction:order===Common.SortOrder.ASC?"asc":"desc",since:since.toISOString()}}).then(function(promiseCallbackArg){return new Common.Optional(promiseCallbackArg.data)})["catch"](function(){return new Common.Optional});return this.$q.all([promiseIssue,promiseComments]).then(function(promisesVals){var optIssue=promisesVals[0],optComments=promisesVals[1];if(optIssue.isEmpty||optComments.isEmpty)return new Common.Optional;var processedComments=optComments.get.map(function(comment){return StabGithubCommentsService.processComment(comment,optIssue.get)}).sort(function(a,b){return Date.parse(a["created"===sortBy?"created_at":"updated_at"])>Date.parse(b["created"===sortBy?"created_at":"updated_at"])?order===Common.SortOrder.ASC?1:-1:order===Common.SortOrder.ASC?-1:1});return _this.setCommentDeletableFlag(processedComments),optIssue.get.comments=processedComments,new Common.Optional(processedComments)})},StabGithubCommentsService.prototype.patchComment=function(issueUrl,comment){var _this=this;return this.createOrPatchComment(issueUrl,comment.body,comment).then(function(optComment){return _this.issueByUrl(issueUrl).then(function(issue){var idxInIssue=issue.get.comments.map(function(comment,idx){return{comment:comment,idx:idx}}).filter(function(obj){return obj.comment.id===optComment.get.id})[0].idx;return issue.get.comments[idxInIssue]=optComment.get,optComment})})},StabGithubCommentsService.prototype.createComment=function(issueUrl,body){var _this=this;return this.createOrPatchComment(issueUrl,body).then(function(optComment){return _this.issueByUrl(issueUrl).then(function(issue){if(0===issue.get.comments.length)issue.get.comments.push(optComment.get);else{var timeKey="created"===_this.issueComments_sortBy?"created_at":"updated_at",tsFirst=issue.get.comments[0][timeKey].getTime(),tsLast=issue.get.comments[issue.get.comments.length-1][timeKey].getTime(),newestFirst=tsFirst-tsLast>=0;newestFirst?issue.get.comments.unshift(optComment.get):issue.get.comments.push(optComment.get)}return optComment})})},StabGithubCommentsService.prototype.createOrPatchComment=function(issueUrl,body,comment){var _this=this;return issueUrl=StabGithubCommentsService.normalizeIssueUrl(issueUrl),this.authService.accessTokenUsingExistingAuthorizationOrAuthorize.then(function(optToken){if(!optToken.isPresent)return _this.$q.when(new Common.Optional);var isPatch=!!comment&&angular.isNumber(comment.id),method=isPatch?_this.$http.patch:_this.$http.post,issueApiUrl=StabGithubCommentsService.toApiIssueUrl(isPatch?issueUrl.substring(0,issueUrl.lastIndexOf("/")):issueUrl);return method(issueApiUrl+"/comments"+(isPatch?"/"+comment.id:""),{body:body},{headers:{Authorization:"token "+optToken.get}}).then(function(promiseCallbackArg){return _this.issueByUrl(issueUrl).then(function(optIssue){if(!optIssue.isPresent)throw new Error("The issue is not present.");var comment=StabGithubCommentsService.processComment(promiseCallbackArg.data,optIssue.get);return _this.setCommentDeletableFlag([comment]),new Common.Optional(comment)})})["catch"](function(){return _this.$q.when(new Common.Optional)})})},StabGithubCommentsService.prototype.deleteComment=function(issueUrl,comment){var _this=this;issueUrl=StabGithubCommentsService.normalizeIssueUrl(issueUrl);var issue=this.issueByUrl(issueUrl);issueUrl=issueUrl.substring(0,issueUrl.lastIndexOf("/"));var issueApiUrl=StabGithubCommentsService.toApiIssueUrl(issueUrl);return this.authService.accessTokenUsingExistingAuthorizationOrAuthorize.then(function(optToken){return optToken.isPresent?_this.$http["delete"](issueApiUrl+"/comments/"+comment.id,{headers:{Authorization:"token "+optToken.get}}).then(function(){return issue.then(function(optIssue){return optIssue.get.comments=optIssue.get.comments.filter(function(c){return c.id!==comment.id}),!0})})["catch"](function(){return!1}):!1})},StabGithubCommentsService.prototype.setCommentDeletableFlag=function(comments){var _this=this;return this.authService.userAuthorizedPromise.then(function(){return _this.userService.authenticatedUser.then(function(optUser){var user=optUser.get;return comments.forEach(function(c){return c.isDeletable=c.user.id===user.id}),comments})})},StabGithubCommentsService.normalizeIssueUrl=function(issueUrl){return(issueUrl+"").replace(/(?:https:\/\/github.com)?(?:\/)?([^\/]+?\/[^\/]+?\/issues\/[^\/]+?)/i,"$1")},StabGithubCommentsService.toApiIssueUrl=function(normalizedIssueUrl){return"https://api.github.com/repos/"+normalizedIssueUrl},StabGithubCommentsService.processComment=function(comment,issue){var commentWasUpdated=comment.created_at!==comment.updated_at;return comment.commenter=comment.user,comment.created_at=new Date(Date.parse(comment.created_at.toString())),comment.updated_at=commentWasUpdated?new Date(Date.parse(comment.updated_at.toString())):null,comment.isIssueOwner=comment.user.id===issue.user.id,comment.isDeletable=!1,comment},StabGithubCommentsService.inlineAnnotatedConstructor=["$http","$q","$cacheFactory","StabGithubCommentsAuthorizationService","StabGithubCommentsUserService",StabGithubCommentsService],StabGithubCommentsService}();Comments.StabGithubCommentsService=StabGithubCommentsService,angular.module("blogapp.article.stab-gh-comments").service("StabGithubCommentsService",StabGithubCommentsService.inlineAnnotatedConstructor)}(Comments=Article.Comments||(Article.Comments={}))}(Article=Blog.Article||(Blog.Article={}))}(Blog||(Blog={}));var Blog;!function(Blog){var Article;!function(Article){var Comments;!function(Comments){var StabGithubCommentsContainerDirectiveController=function(){function StabGithubCommentsContainerDirectiveController($scope,$q,commentService,authService,userService){var _this=this;this.$scope=$scope,this.$q=$q,this.commentService=commentService,this.authService=authService,this.userService=userService,this.isAuthorized=!1,this.isWaitingForAuthorization=!1,this.authenticatedUser=null,this._isBusy=!1,this._issueUrl=$scope.issueUrl,this._isBusy=!0;var promise_issue=commentService.issueByUrl(this.issueUrl).then(function(optIssue){commentService.commentsForIssueByUrl(_this.issueUrl).then(function(optComments){_this._issue=optIssue.get})}),promise_auth=authService.isUserAuthorized.then(function(isAuthorized){return _this.isAuthorized=isAuthorized})["finally"](function(){return _this.isWaitingForAuthorization=!1});userService.authenticatedUser.then(function(optUser){optUser.isPresent&&(_this.authenticatedUser=optUser.get)}),this._isBusy=!0,$q.all([promise_issue,promise_auth])["finally"](function(){_this._isBusy=!1})}return Object.defineProperty(StabGithubCommentsContainerDirectiveController.prototype,"isBusy",{get:function(){return this._isBusy||this.isWaitingForAuthorization},enumerable:!0,configurable:!0}),Object.defineProperty(StabGithubCommentsContainerDirectiveController.prototype,"issueUrl",{get:function(){return this._issueUrl},enumerable:!0,configurable:!0}),Object.defineProperty(StabGithubCommentsContainerDirectiveController.prototype,"issue",{get:function(){return this._issue},enumerable:!0,configurable:!0}),Object.defineProperty(StabGithubCommentsContainerDirectiveController.prototype,"comments",{get:function(){return this.issue?this.issue.comments:[]},enumerable:!0,configurable:!0}),StabGithubCommentsContainerDirectiveController.prototype.tryAuthorize=function(){var _this=this;return this.isWaitingForAuthorization=!0,this.authService.accessTokenUsingExistingAuthorizationOrAuthorize.then(function(optToken){_this.isAuthorized=optToken.isPresent})["finally"](function(){_this.isWaitingForAuthorization=!1})},StabGithubCommentsContainerDirectiveController.prototype.deleteComment=function(comment){var _this=this;return confirm("Do you really want to delete your comment?")?(this._isBusy=!0,this.commentService.deleteComment(this.issueUrl,comment)["finally"](function(){return _this._isBusy=!1})):this.$q.when()},StabGithubCommentsContainerDirectiveController.prototype.patchComment=function(comment){var _this=this;return this._isBusy=!0,this.commentService.patchComment(this.issueUrl,comment)["finally"](function(){return _this._isBusy=!1})},StabGithubCommentsContainerDirectiveController.inlineAnnotatedConstructor=["$scope","$q","StabGithubCommentsService","StabGithubCommentsAuthorizationService","StabGithubCommentsUserService",StabGithubCommentsContainerDirectiveController],StabGithubCommentsContainerDirectiveController}();Comments.StabGithubCommentsContainerDirectiveController=StabGithubCommentsContainerDirectiveController,angular.module("blogapp.article.stab-gh-comments").controller("StabGithubCommentsContainerDirectiveController",StabGithubCommentsContainerDirectiveController.inlineAnnotatedConstructor)}(Comments=Article.Comments||(Article.Comments={}))}(Article=Blog.Article||(Blog.Article={}))}(Blog||(Blog={}));var Blog;!function(Blog){var Article;!function(Article){var Comments;!function(Comments){var StabGithubCommentsCreatePostDirectiveController=function(){function StabGithubCommentsCreatePostDirectiveController($scope,$q,$anchorScroll,authService,commentService,userService){this.$scope=$scope,this.$q=$q,this.$anchorScroll=$anchorScroll,this.authService=authService,this.commentService=commentService,this.userService=userService,this._isBusy=!1}return Object.defineProperty(StabGithubCommentsCreatePostDirectiveController.prototype,"isBusy",{get:function(){return this._isBusy||this.$scope.commentVm.isBusy},enumerable:!0,configurable:!0}),StabGithubCommentsCreatePostDirectiveController.prototype.postComment=function(body){var _this=this;return body&&""!==(body+"").trim()?(this._isBusy=!0,this.commentService.createComment(this.$scope.commentVm.issueUrl,body).then(function(optComment){var domDeferred=_this.$q.defer(),newCommentId="stab-github-comment-"+optComment.get.id,interval=window.setInterval(function(){document.querySelector("#"+newCommentId)&&(_this.$scope.post.commentBody="",_this.$anchorScroll(newCommentId),clearInterval(interval),domDeferred.resolve())},25);return domDeferred.promise})["finally"](function(){return _this._isBusy=!1})):(alert("Your comment must not be empty."),this.$q.when())},StabGithubCommentsCreatePostDirectiveController.inlineAnnotatedConstructor=["$scope","$q","$anchorScroll","StabGithubCommentsAuthorizationService","StabGithubCommentsService","StabGithubCommentsUserService",StabGithubCommentsCreatePostDirectiveController],StabGithubCommentsCreatePostDirectiveController}();Comments.StabGithubCommentsCreatePostDirectiveController=StabGithubCommentsCreatePostDirectiveController,angular.module("blogapp.article.stab-gh-comments").controller("StabGithubCommentsCreatePostDirectiveController",StabGithubCommentsCreatePostDirectiveController.inlineAnnotatedConstructor)}(Comments=Article.Comments||(Article.Comments={}))}(Article=Blog.Article||(Blog.Article={}))}(Blog||(Blog={}));var Blog;!function(Blog){var Article;!function(Article){var Comments;!function(Comments){Comments.StabGithubCommentsCreatePostDirective=function(){return{replace:!0,restrict:"E",controllerAs:"createPostVm",controller:"StabGithubCommentsCreatePostDirectiveController",template:function(scope,element,attrs){var __inline__template='<div id="create-post"><div><div><h4 ng-if="commentVm.isAuthorized" style="background-image:url({{ commentVm.authenticatedUser.avatar_url }});">{{ commentVm.authenticatedUser.login }}</h4> <small ng-if="!commentVm.isAuthorized">You need to sign in to Github and authorize this app for commenting.</small></div><div><textarea ng-model="post.commentBody" ng-init="post.commentBody=\'\';" ng-show="!commentVm.isAuthorized || post.createPostMode==\'write\' || post.createPostMode==\'both\';" ng-disabled="!commentVm.isAuthorized || createPostVm.isBusy" placeholder="Your comment goes here. Markdown is enabled. Be nice :)"></textarea><div ng-show="post.createPostMode == \'preview\' || post.createPostMode == \'both\';"><h6 ng-show="post.createPostMode == \'both\';">Preview:</h6><div btf-markdown="post.commentBody"></div></div></div><hr/><div class="pull-right"><div ng-if="commentVm.isAuthorized" class="btn-group dropup" ng-model="post.showCreatePostMode" ng-init="post.showCreatePostMode = false" ng-class="{\'open\' : post.showCreatePostMode }"> <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-click="post.showCreatePostMode = !post.showCreatePostMode" ng-disabled="createPostVm.isBusy">Mode: <i>{{ post.createPostMode }}</i>&nbsp;<span class="caret"></span></button><ul class="dropdown-menu" ng-model="post.createPostMode" ng-init="post.createPostMode=\'write\'"><li ng-click="post.showCreatePostMode = false; post.createPostMode = \'write\';" ng-class="{\'active\': post.createPostMode == \'write\'}"><a href>Write</a></li><li ng-click="post.showCreatePostMode = false; post.createPostMode = \'preview\';" ng-class="{\'active\': post.createPostMode == \'preview\'}"><a href>Preview</a></li><li ng-click="post.showCreatePostMode = false; post.createPostMode = \'both\';" ng-class="{\'active\': post.createPostMode == \'both\'}"><a href>Both</a></li></ul></div> <button ng-if="commentVm.isAuthorized" type="button" class="btn" ng-click="createPostVm.postComment(post.commentBody);" ng-disabled="createPostVm.isBusy">Post comment</button> <span ng-if="commentVm.isWaitingForAuthorization">Waiting for authorization..</span> <button ng-if="!commentVm.isAuthorized" ng-disabled="commentVm.isWaitingForAuthorization || createPostVm.isBusy" type="button" class="btn btn-primary" ng-click="commentVm.tryAuthorize();"> Authorize&nbsp;<span class="glyphicon glyphicon-log-in"></span></button></div><div class="clearfix"></div></div></div>';return __inline__template}}},Comments.StabGithubCommentsCreatePostDirective.$inject=[],angular.module("blogapp.article.stab-gh-comments").directive("stabGithubCommentsCreatePost",Comments.StabGithubCommentsCreatePostDirective)}(Comments=Article.Comments||(Article.Comments={}))}(Article=Blog.Article||(Blog.Article={}))}(Blog||(Blog={}));var Blog;!function(Blog){var Article;!function(Article){var Comments;!function(Comments){Comments.StabGithubCommentsContainerDirective=function(){return{replace:!0,restrict:"E",scope:{issueUrl:"@"},controllerAs:"commentVm",controller:"StabGithubCommentsContainerDirectiveController",template:function(scope,element,attrs){var __inline__template='<div id="stab-github-comments-container"><hr/><h3>Comments <span ng-if="commentVm.comments.length>0"> ({{ commentVm.comments.length }}):</span></h3><stab-github-comments-create-post></stab-github-comments-create-post><div ng-if="commentVm.comments.length> 0"><hr id="poster-and-comments-separator"/><div class="comment media" ng-repeat="comment in commentVm.comments track by comment.id" ng-class="{ \'my-comment\': comment.isIssueOwner }" ng-attr-id="{{ \'stab-github-comment-\' + comment.id }}"><div class="media-left"> <img ng-attr-src="{{ comment.user.avatar_url }}"/></div><div class="media-body"><h4> <a href="https://github.com/{{ comment.user.login }}" target="_blank">{{ comment.user.login }}</a> <span ng-if="comment.isIssueOwner" class="label label-info">Owner</span> <span ng-if="comment.isDeletable" ng-show="!comment.isEditing;" ng-model="comment.bodyOrg" ng-click="comment.bodyOrg = comment.body; comment.isEditing = true;" class="label label-warning" ng-disabled="commentVm.isBusy">Edit&nbsp;<span class="glyphicon glyphicon-edit"></span></span> <span ng-if="comment.isDeletable" ng-show="!comment.isEditing;" ng-click="commentVm.deleteComment(comment);" class="label label-danger" ng-disabled="commentVm.isBusy">Delete&nbsp;<span class="glyphicon glyphicon-remove"></span></span> <small>wrote on {{ comment.created_at.toLocaleDateString() }} @ {{ comment.created_at.toLocaleTimeString() }} <span ng-if="comment.updated_at">and updated on {{ comment.updated_at.toLocaleDateString() }} @ {{ comment.updated_at.toLocaleTimeString() }}</span></small></h4><hr/><p ng-show="!comment.isEditing" btf-markdown="comment.body"></p><div ng-show="comment.isEditing" class="edit-comment-inplace"><div><textarea ng-model="comment.body" ng-show="post.edit.createPostMode == \'write\' || post.edit.createPostMode == \'both\';" placeholder="Your comment goes here. Markdown is enabled. Be nice :)" ng-disabled="commentVm.isBusy"></textarea><div ng-show="post.edit.createPostMode == \'preview\' || post.edit.createPostMode == \'both\';"><h6 ng-show="post.edit.createPostMode == \'both\';">Preview:</h6><div btf-markdown="comment.body"></div></div></div><hr/><div class="pull-right"><div class="btn-group dropup" ng-model="post.edit.showCreatePostMode" ng-init="post.edit.showCreatePostMode = false" ng-class="{\'open\' : post.edit.showCreatePostMode }"> <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" ng-click="post.edit.showCreatePostMode = !post.edit.showCreatePostMode" ng-disabled="commentVm.isBusy"> Mode: <i>{{ post.edit.createPostMode }}</i>&nbsp;<span class="caret"></span></button><ul class="dropdown-menu" ng-model="post.edit.createPostMode" ng-init="post.edit.createPostMode=\'write\'"><li ng-click="post.edit.showCreatePostMode = false; post.edit.createPostMode = \'write\';" ng-class="{\'active\': post.edit.createPostMode == \'write\'}"><a href>Write</a></li><li ng-click="post.edit.showCreatePostMode = false; post.edit.createPostMode = \'preview\';" ng-class="{\'active\': post.edit.createPostMode == \'preview\'}"><a href>Preview</a></li><li ng-click="post.edit.showCreatePostMode = false; post.edit.createPostMode = \'both\';" ng-class="{\'active\': post.edit.createPostMode == \'both\'}"><a href>Both</a></li></ul></div> <button ng-if="commentVm.isAuthorized" type="button" class="btn" ng-click="comment.isEditing = false; comment.body = comment.bodyOrg;" ng-disabled="commentVm.isBusy">Discard changes</button> <button ng-if="commentVm.isAuthorized" type="button" class="btn btn-primary" ng-click="commentVm.patchComment(comment);" ng-disabled="commentVm.isBusy">Update comment</button></button></div></div></div></div></div><div ng-if="!commentVm.comments.length" class="jumbotron text-center"><h4>Currently, no comments exist. Be the first to write one!</h4></div></div>';return __inline__template}}},Comments.StabGithubCommentsContainerDirective.$inject=[],angular.module("blogapp.article.stab-gh-comments").directive("stabGithubCommentsContainer",Comments.StabGithubCommentsContainerDirective)}(Comments=Article.Comments||(Article.Comments={}))}(Article=Blog.Article||(Blog.Article={}))}(Blog||(Blog={}));